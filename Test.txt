import com.atlassian.jira.component.ComponentAccessor

def usernameRegex = ~/^.*\(HZD\)$/
def kmGroupRegex = ~/^KM\d+$/
def excludeGroup  = "jira-administrators"

def um = ComponentAccessor.userManager
def gm = ComponentAccessor.groupManager

def excluded = gm.getUsersInGroup(excludeGroup)*.username as Set<String>
def hzdUsers = um.getAllApplicationUsers().findAll { u ->
    u.active &&
    !(u.username in excluded) &&
    (u.displayName ==~ usernameRegex)
}

def out = new StringBuilder()
out << "<b>Gesamtzahl eindeutiger HZD-Benutzer:</b> ${hzdUsers.size()}<br><br>"
out << "<table border='1'><tr><th>Benutzer</th><th>KM-Gruppe</th></tr>"

hzdUsers.sort { a, b -> a.displayName <=> b.displayName }.each { user ->
    def kmGroups = gm.getGroupsForUser(user)
                     .findAll { it.name ==~ kmGroupRegex }
                     *.name as Set<String>

    if (kmGroups) {
        kmGroups.sort().each { grp ->
            out << "<tr><td>${user.displayName}</td><td>${grp}</td></tr>"
        }
    } else {
        out << "<tr><td>${user.displayName}</td><td></td></tr>"
    }
}

out << "</table>"
return out.toString()
