import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.audit.api.AuditSearchService
import com.atlassian.audit.api.AuditQuery
import com.atlassian.audit.api.pagination.PageRequests
import com.atlassian.audit.entity.AuditEntity

// AuditSearchService über OSGi holen
def auditSearchService = ComponentAccessor.getOSGiComponentInstanceOfType(AuditSearchService)

// AuditQuery erstellen (z.B. nach "User deaktiviert" suchen)
def auditQuery = AuditQuery.builder()
    .searchText("User deaktiviert")
    .build()

// PageRequest erstellen (z.B. erste Seite mit 100 Treffern)
def pageRequest = PageRequests.limit(100)

// Suche ausführen
def auditPage = auditSearchService.findBy(auditQuery, pageRequest)

// Ergebnisse verarbeiten
def allMatches = auditPage.getValues().collect { AuditEntity entity ->
    [
        Datum       : entity.created,
        Aktion      : entity.summary,
        Autor       : entity.author?.name,
        Betroffene  : entity.affectedObjects*.name.join(", ")
    ]
}

return allMatches
