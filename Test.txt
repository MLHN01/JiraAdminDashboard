import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.audit.api.AuditSearchService
import com.atlassian.audit.api.AuditQuery
import com.atlassian.audit.entity.AuditEntity

// Hole den AuditSearchService über OSGi
def auditSearchService = ComponentAccessor.getOSGiComponentInstanceOfType(AuditSearchService)

// Baue eine Query, um Events zu filtern (z.B. nach "User deaktiviert")
def auditQuery = AuditQuery.builder()
    .searchText("User deaktiviert") // Oder je nach Spracheinstellung anpassen
    .maxResults(500) // optional: Anzahl begrenzen
    .build()

// Hole die Audit-Einträge
def auditResults = auditSearchService.getAuditRecords(auditQuery)

// Ergebnisse als Liste ausgeben
def allMatches = auditResults.collect { AuditEntity entity ->
    [
        Datum            : entity.created,
        Zusammenfassung  : entity.summary,
        Autor            : entity.author?.name,
        Betroffene       : entity.affectedObjects*.name.join(", ")
    ]
}

return allMatches
