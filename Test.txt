import com.atlassian.sal.api.component.ComponentLocator
import com.atlassian.audit.api.AuditService
import com.atlassian.audit.entity.AuditEntity
import com.atlassian.audit.entity.AffectedObject
import java.time.Instant
import java.time.temporal.ChronoUnit

// AuditService holen
def auditService = ComponentLocator.getComponent(AuditService)

// Zeitraum (z.B. letzte 60 Tage)
def fromDate = Instant.now().minus(60, ChronoUnit.DAYS)
def toDate = Instant.now()

// Audit-Events laden
def auditEvents = auditService.getEntities(fromDate, toDate, 0, 1000)

// Filtern nach Events, wo Benutzer deaktiviert wurden
def userDeactivatedEvents = auditEvents.findAll { AuditEntity event ->
    event.summary?.toLowerCase().contains("user deactivated") ||
    event.summary?.toLowerCase().contains("benutzer deaktiviert")
}

// Ergebnisse übersichtlich auflisten
return userDeactivatedEvents.collect { event ->
    def affectedUsers = event.affectedObjects.collect { AffectedObject obj -> obj.name }.join(", ")
    [
        Datum        : event.created,
        Aktion       : event.summary,
        DurchgeführtVon: event.author?.name,
        BetroffeneBenutzer: affectedUsers
    ]
}
